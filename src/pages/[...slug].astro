---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../layouts/BlogPost.astro"
import client from "../../tina/__generated__/client";
import AdminBlogPost from "../../tina/pages/AdminBlogPost";

export async function getStaticPaths() {
	const posts = await getCollection("blog");

	return posts.map((post) => ({
		params: { slug: post.id }, // This will be posts/{category}/{post-name}
		props: {
			post,
			getTinaProps: async () =>
				client.queries.blog({
					relativePath: post.data.tinaInfo.relativePath,
				}),
		},
	}));
}

const { post, getTinaProps } = Astro.props;
const tinaProps = await getTinaProps();
const blog = tinaProps.data.blog as any;
---

<BlogPost
  title={blog.title || 'Untitled Post'}
  description={blog.description || ''}
  category={blog.category || 'uncategorized'}
  author={blog.author || 'Unknown Author'}
  pubDate={new Date(blog.pubDate ?? Date.now())}
  updatedDate={blog.updatedDate ? new Date(blog.updatedDate) : undefined}
  tinaInfo={{
    path: blog._sys.path,
    filename: blog._sys.filename,
    basename: blog._sys.basename,
    relativePath: blog._sys.relativePath
  }}
  heroImage={blog.heroImage || '/blog-placeholder-1.jpg'}
>
		<AdminBlogPost {...tinaProps} client:tina/>
</BlogPost>
